@charset 'UTF-8';

/// Sets all the length properties for the given dimension(s) at once for an
/// element that you want to remain at a fixed size.
///
/// @param {Value} $length - A length value (ex: 10rem or 200px)
/// @param {Keyword} $dimension [wh] - Can be `height`, `width`, or any shorter
/// version of either (`w` or `h`) to only set those dimensions. To set both
/// width AND height use either `wh`, `hw` or `both`.
/// @param {Boolean} $important-flag [false] - True if the !important
/// designation should be applied to all values.
///
/// @throw Incorrect keyword for $dimension
@mixin fixed-length($length, $dimension: wh, $important-flag: false) {
  $imp: null;
  @if ($important-flag) {
    $imp: !important;
  }
  @if (to-lower-case(str-slice($dimension, 1, 2)) == 'wh'
      or to-lower-case(str-slice($dimension, 1, 2)) == 'hw'
      or to-lower-case($dimension) == 'both') {
    height: $length $imp;
    max-height: $length $imp;
    min-height: $length $imp;
    max-width: $length $imp;
    min-width: $length $imp;
    width: $length $imp;
  } @else if (to-lower-case(str-slice($dimension, 1, 1)) == 'h') {
    height: $length $imp;
    max-height: $length $imp;
    min-height: $length $imp;
  } @else if (to-lower-case(str-slice($dimension, 1, 1)) == 'w') {
    max-width: $length $imp;
    min-width: $length $imp;
    width: $length $imp;
  } @else {
    @error 'Invalid $dimension of `#{$dimension}` for the `fixed-length` mixin.'l;
  }
}
